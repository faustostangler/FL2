@startuml
skinparam packageStyle rectangle
        package "fly.infrastructure.factories" {
            class DataCleanerFactory <<factory>> {
                +create_data_cleaner(config: Config, logger: LoggerPort) : DataCleaner
                }
            }
        package "fly.infrastructure.helpers" {
            class DataCleaner {
                +clean_text(...) : str
                +clean_number(...) : float
                +clean_date(...) : datetime
                +clean_dict_fields(...) : dict
                }
                DataCleaner --> fly.infrastructure.config.Config
            }
        package "fly.infrastructure.logging" {
            class Logger {
                -config : fly.infrastructure.config.Config
                -logger_name : str
                -progress_formatter : ProgressFormatter
                -context_tracker : ContextTracker
                -id_generator : IdGenerator
                -_logger : LoggerAdapter
                +log(...) : void
                -_setup_logger(level: str) : LoggerAdapter
                }
                Logger --|> domain.LoggerPort
                Logger --> fly.infrastructure.config.Config
                Logger --> ContextTracker
                Logger --> ProgressFormatter
                Logger --> IdGenerator
                Logger --> LoggerAdapter

            class ContextTracker {
                +get_context() : str
                }

            class ProgressFormatter {
                +format(progress: dict) : str
                }

            class IdGenerator {
                +create_id(size: int = 0, string_id: str = None) : str
                }

            class MergedLoggerAdapter {
                -msg: str
                -kwargs: dict
                +process() : tuple[str, dict]
                }

            class SafeFormatter {
                -record: LogRecord
                +format() : str
                }
                MergedLoggerAdapter --|> logging.LoggerAdapter
                SafeFormatter --|> logging.Formatter

            }


 @enduml